@inject IShoppingService ShoppingService
@inject NavigationManager NavigationManager

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Create new list</h5>
        <EditForm Model="this" OnValidSubmit="Save">
            <DataAnnotationsValidator />

            <div class="row">
                <div class="col-sm-5">
                    <div class="form-floating mb-3">
                        <InputText @bind-Value="Title" class="form-control" id="txtListTitle" placeholder="Name of the shopping list" />
                        <label for="txtListTitle">Name</label>
                    </div>
                </div>
                <div class="col">
                    <button type="submit" class="btn btn-outline-success btn-lg mt-1">Create</button>
                </div>
            </div>

        </EditForm>

    </div>
</div>

@code {
    [Required] 
    [StringLength(100, MinimumLength = 3)]
    public string? Title { get; set; }

    [CascadingParameter] public Task<AuthenticationState>? AuthState { get; set; }

    public async Task Save()
    {
        var authState = await AuthState!;
        var userIdClaim = authState.User.FindFirst(ClaimTypes.NameIdentifier);

        var id = Guid.NewGuid();
        var shoppingList = new ShoppingList()
            {
                Id = id,
                Title = Title!,
                CreationDate = DateTime.Now,
                UserId = userIdClaim!.Value
            };
        await ShoppingService.InsertShoppingListAsync(shoppingList);

        NavigationManager.NavigateTo($"/lists/{id}");
    }
}
